networks:
  monitoring:
    external: true

volumes:
  prometheus_data: { }
  grafana-storage: { }

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    ports:
      - 9100:9100
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - monitoring
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    #    environment:
    #      - GF_SECURITY_ADMIN_PASSWORD=MYPASSWORT
    #      - GF_USERS_ALLOW_SIGN_UP=false
    #      - GF_SERVER_DOMAIN=myrul.com
    #      - GF_SMTP_ENABLED=true
    #      - GF_SMTP_HOST=smtp.gmail.com:587
    #      - GF_SMTP_USER=myadrress@gmail.com
    #      - GF_SMTP_PASSWORD=mypassword
    #      - GF_SMTP_FROM_ADDRESS=myaddress@gmail.com
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
    #      - ./grafana-data:/var/lib/grafana
    networks:
      - monitoring

#  cadvisor:
#    image: google/cadvisor:latest
#    container_name: monitoring_cadvisor
#    restart: unless-stopped
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#    expose:
#      - 8080
#    ports:
#      - 8080:8080
#    networks:
#      - monitoring
